 server {
        #listen 443;
        listen 48443;
		error_log /home/liycq/lua/nginx1.10.2/logs/error.log debug;
        server_name *.citysdk.cn;
		ssl on;
		ssl_certificate /home/liycq/lua/nginx1.10.2/conf/server.crt;
		ssl_certificate_key /home/liycq/lua/nginx1.10.2/conf/server.key;
#########################################################################################

		#微服务业务接口、api
		location ~* "^/([^/]+)/(.*)$" {
		    set $partofupstream "$1splash$2";#设置初始值(api使用此初始值)
		    set $contexta $1;
		    set $contextb $2;
			set $newAuthorization $http_authorization;#在api-access-if.lua中改过
			set $tempHost $host:$server_port;
			auth_request /auth;
			auth_request_set $authflownum $upstream_http_flownum;	
			auth_request_set $orderDetailId $upstream_http_orderDetailId;
			auth_request_set $authtoken $upstream_http_microToken;
			auth_request_set $realAreacode $upstream_http_areacode;
			auth_request_set $realHost $upstream_http_realHost;
            auth_request_set $tempAuthorization $upstream_http_authorization;
            auth_request_set $nginxresourcetype $upstream_http_nginxresourcetype;
            auth_request_set $serviceUrl $upstream_http_serviceContext;
            auth_request_set $serviceuserid $upstream_http_userId;
			auth_request_set $serviceappkey $upstream_http_appKey;
			auth_request_set $servicecontext $upstream_http_context;
			auth_request_set $tempIsPromote $upstream_http_isPromote;#是否为推广站点
			auth_request_set $tempCacheCode $upstream_http_cacheCode;
			auth_request_set $tempRequestDes $upstream_http_requestDes;
			auth_request_set $tempuseraccount $upstream_http_useraccount;
			auth_request_set $tempcacheUrl $upstream_http_cacheUrl;
			#auth_request_set $tempsaasCacheValue $upstream_http_saasCacheValue;
            access_by_lua_file /home/liycq/lua/nginx1.10.2/logs/api-access-if.lua;#鉴权后lua后处理代码
            
			set $vhost "$1/$2?$args";
			proxy_set_header partofupstream $partofupstream;
			proxy_set_header authorization $newAuthorization;#在api-access-if.lua中改过
			proxy_set_header requesthost $host:$server_port;
			proxy_set_header tvhost $tempHost;
			proxy_set_header realAreacode $realAreacode;
			#proxy_set_header tvhost $host:$server_port;
			proxy_set_header authflownum $authflownum;
			proxy_set_header orderDetailId $orderDetailId;
			proxy_set_header microToken $authtoken;
			proxy_set_header userId $serviceuserid;
			proxy_set_header appkey $serviceappkey;
			proxy_set_header context $servicecontext;
			proxy_set_header isPromote $tempIsPromote;
			proxy_set_header cacheCode $tempCacheCode;#缓存接口返回代码。CacheFilter设置
			proxy_set_header requestDes $tempRequestDes;#缓存接口返回的值。CacheFilter设置
			proxy_set_header cacheUrl $tempcacheUrl;
			proxy_set_header useraccount $tempuseraccount;
			#proxy_set_header saasCacheValue $tempsaasCacheValue;
			proxy_ssl_certificate /home/liycq/lua/nginx1.10.2/conf/server.crt;
			proxy_ssl_certificate_key /home/liycq/lua/nginx1.10.2/conf/server.key;
			proxy_pass https://httpsrealbackend/$vhost;
		}	
##########################################################################################
		#微服务首页
		location ~* "^/([^/]+)$" {
			set $partofupstream "$1";#设置初始值
		    set $contexta $1;
			set $newAuthorization $http_authorization;#在api-access-if.lua中改过
			set $tempHost $host:$server_port;
			auth_request /auth;
			auth_request_set $authflownum $upstream_http_flownum;	
			auth_request_set $orderDetailId $upstream_http_orderDetailId;
			auth_request_set $authtoken $upstream_http_microToken;
			auth_request_set $realAreacode $upstream_http_areacode;
			auth_request_set $realHost $upstream_http_realHost;
            auth_request_set $tempAuthorization $upstream_http_authorization;
            auth_request_set $nginxresourcetype $upstream_http_nginxresourcetype;
            auth_request_set $serviceUrl $upstream_http_serviceContext;
            auth_request_set $serviceuserid $upstream_http_userId;
			auth_request_set $serviceappkey $upstream_http_appKey;
			auth_request_set $servicecontext $upstream_http_context;
			auth_request_set $tempIsPromote $upstream_http_isPromote;#是否为推广站点
			auth_request_set $tempCacheCode $upstream_http_cacheCode;#
			auth_request_set $tempRequestDes $upstream_http_requestDes;
			auth_request_set $tempuseraccount $upstream_http_useraccount;
			auth_request_set $tempcacheUrl $upstream_http_cacheUrl;
			#auth_request_set $tempsaasCacheValue $upstream_http_saasCacheValue;
            access_by_lua_file /home/liycq/lua/nginx1.10.2/logs/api-access-if.lua;
            
			set $vhost "$1?$args";
			proxy_set_header partofupstream $partofupstream;
			proxy_set_header authorization $newAuthorization;#在api-access-if.lua中改过
			proxy_set_header requesthost $host:$server_port;
			proxy_set_header tvhost $tempHost;
			proxy_set_header realAreacode $realAreacode;
			#proxy_set_header tvhost $host:$server_port;
			proxy_set_header authflownum $authflownum;
			proxy_set_header orderDetailId $orderDetailId;
			proxy_set_header microToken $authtoken;
			proxy_set_header userId $serviceuserid;
			proxy_set_header appkey $serviceappkey;
			proxy_set_header context $servicecontext;
			proxy_set_header isPromote $tempIsPromote;
			proxy_set_header cacheCode $tempCacheCode;#缓存接口返回代码。CacheFilter设置
			proxy_set_header requestDes $tempRequestDes;##缓存接口返回的值。CacheFilter设置
			proxy_set_header useraccount $tempuseraccount;
			proxy_set_header cacheUrl $tempcacheUrl;
			#proxy_set_header saasCacheValue $tempsaasCacheValue;
			proxy_ssl_certificate /home/liycq/lua/nginx1.10.2/conf/server.crt;
			proxy_ssl_certificate_key /home/liycq/lua/nginx1.10.2/conf/server.key;
			proxy_pass https://httpsrealbackend/$vhost;
        }

####################################################################################
		location = /auth {
			proxy_set_header Host $host:$server_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Second-Auth-Addr $server_addr;
			proxy_pass_request_body off;
			proxy_set_header Content-Length "";
			proxy_set_header X-Original-URI $request_uri;
			proxy_pass http://authupstream/gateway-web-1.8.0/auth;
			#return 200;
		}   
##################################################################################
    }
	
	
	
	
	#############################################
 server {
    listen 38083;
	error_log /home/liycq/lua/nginx1.10.2/logs/error.log debug;
    server_name localhost38083;
	set $resp_body "";
    add_header "Set-Cookie" "microToken=$http_microToken; path=/";
	#add_header "Set-Cookie" "saasuser=$http_saasCacheValue; path=/";
    #add_header Set-Cookie "token=$http_token; expires=Mon, 15-Jan-18 03:29:32 GMT; domain=citysdk.cn; path=/";
	ssl on;
	ssl_certificate /home/liycq/lua/nginx1.10.2/conf/server.crt;
	ssl_certificate_key /home/liycq/lua/nginx1.10.2/conf/server.key;
    proxy_set_header Host $http_tvhost;
	

########################################################
    #处理微服务非首页及API
    location ~*  "^/([^/]+)/(.*)$" {
		 set $vhost "$1/$2";
		 set $realupstream $vhost;
		 #set $temptestapi "$1splash$2";
		 set $authflownum $http_authflownum;
		 set $cacheCode $http_cacheCode;
		 set $orderDetailId $http_orderDetailId;
		 set $requestDes $http_requestDes;
		 if ( $http_requesthost ~* "^([^/]+)-([^/]+)\.(.*)\.(.*)$" ) {
                set $testapi "$http_realAreacode$2$http_partofupstream"; 
                set $secondDomainsecondContext $2;
         }
         rewrite_by_lua_file /home/liycq/lua/nginx1.10.2/logs/cache-handler.lua;
		 access_by_lua_file /home/liycq/lua/nginx1.10.2/logs/api-access-rewrite.lua;
		 #proxy_ssl_certificate /home/liycq/lua/nginx1.10.2/conf/server.crt;
		 #proxy_ssl_certificate_key /home/liycq/lua/nginx1.10.2/conf/server.key;
		 proxy_pass http://$testapi/$realupstream;
		 body_filter_by_lua_file /home/liycq/lua/nginx1.10.2/logs/body-filter.lua;
		 log_by_lua_file /home/liycq/lua/nginx1.10.2/logs/api-error-report2.lua;
    }

############################################################################
	#处理微服务首页
	location ~* "^/([^/]+)$" {
		 set $vhost "$1";
		 set $realupstream $vhost;#设置初始context
		 set $authflownum $http_authflownum;
		 set $cacheCode $http_cacheCode;
		 set $orderDetailId $http_orderDetailId;
		 set $requestDes $http_requestDes;
		 if ( $http_requesthost ~* "^([^/]+)-([^/]+)\.(.*)\.(.*)$" ) {
                set $testapi "$http_realAreacode$2$http_partofupstream"; 
                set $secondDomainsecondContext $2;
         }
         rewrite_by_lua_file /home/liycq/lua/nginx1.10.2/logs/cache-handler.lua;
		 access_by_lua_file /home/liycq/lua/nginx1.10.2/logs/api-access-rewrite.lua;
		 #proxy_ssl_certificate /home/liycq/lua/nginx1.10.2/conf/server.crt;
		 #proxy_ssl_certificate_key /home/liycq/lua/nginx1.10.2/conf/server.key;
		 proxy_pass http://$testapi/$realupstream;
		 body_filter_by_lua_file /home/liycq/lua/nginx1.10.2/logs/body-filter.lua;
		 log_by_lua_file /home/liycq/lua/nginx1.10.2/logs/api-error-report2.lua;
	}
 }

	